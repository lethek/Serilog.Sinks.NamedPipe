namespace Serilog.Sinks.NamedPipe;


/// <summary>
/// Represents the method that will handle a <see cref="NamedPipeSink"/> event that has no event data.
/// </summary>
/// <param name="sink">The source of the event.</param>
public delegate void NamedPipeSinkEventHandler(NamedPipeSink sink);


/// <summary>
/// Represents the method that will handle a <see cref="NamedPipeSink"/> event that has <typeparamref name="TEventArgs"/> event data.
/// </summary>
/// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
/// <param name="sink">The source of the event.</param>
/// <param name="e">An object that contains the event data.</param>
public delegate void NamedPipeSinkEventHandler<in TEventArgs>(NamedPipeSink sink, TEventArgs e);


/// <summary>
/// Represents the method that will handle a <see cref="NamedPipeSink"/> error event that has an <see cref="Exception"/> but no additional event data.
/// </summary>
/// <param name="sink">The source of the event.</param>
/// <param name="ex">An <see cref="Exception"/> that contains the error data.</param>
public delegate void NamedPipeSinkErrorEventHandler(NamedPipeSink sink, Exception ex);


/// <summary>
/// Represents the method that will handle a <see cref="NamedPipeSink"/> error event that has an <see cref="Exception"/> and additional <typeparamref name="TEventArgs"/> event data.
/// </summary>
/// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
/// <param name="sink">The source of the event.</param>
/// <param name="e">An object that contains the event data.</param>
/// <param name="ex">An <see cref="Exception"/> that contains the error data.</param>
public delegate void NamedPipeSinkErrorEventHandler<in TEventArgs>(NamedPipeSink sink, TEventArgs e, Exception ex);
