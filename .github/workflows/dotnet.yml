name: Build & Publish

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  buildConfiguration: Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          cache: true
          cache-dependency-path: '**/packages.lock.json'
          dotnet-quality: 'ga'
          dotnet-version: |
            6.x
            8.x

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.1
        with:
          versionSpec: 5.x

      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v3.1.1
        id: gitversion
        with:
          useConfigFile: true

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c ${{ env.buildConfiguration }} --no-restore -p:Version=${{ steps.gitversion.outputs.nuGetVersion }} -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} -p:AssemblyVersion=1.0.0.0

      - name: Test
        run: dotnet test -c ${{ env.buildConfiguration }} --no-build -v normal --filter FullyQualifiedName!~IntegrationTests

      - name: Pack
        run: dotnet pack -c ${{ env.buildConfiguration }} -p:PackageOutputPath="${{ github.workspace }}/artifacts/" -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          compression-level: 0
          path: |
            ${{ github.workspace }}/artifacts/*.nupkg
            ${{ github.workspace }}/artifacts/*.snupkg

      - name: Push
        uses: lethek/os-specific-run@v1.0.6
        with:
          linux: dotnet nuget push "${{ github.workspace }}/artifacts/*.nupkg" -s ${{ secrets.NUGET_SOURCE }} -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate
          windows: dotnet nuget push "${{ github.workspace }}\artifacts\*.nupkg" -s ${{ secrets.NUGET_SOURCE }} -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate
